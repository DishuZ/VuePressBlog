(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{436:function(s,a,t){s.exports=t.p+"assets/img/image-2.d9677c98.png"},437:function(s,a,t){s.exports=t.p+"assets/img/image-1.b12e2d6c.png"},438:function(s,a,t){s.exports=t.p+"assets/img/image-3.227254bf.png"},439:function(s,a,t){s.exports=t.p+"assets/img/image.5a53f16d.png"},440:function(s,a,t){s.exports=t.p+"assets/img/image-4.3e9f9f09.png"},441:function(s,a,t){s.exports=t.p+"assets/img/image-5.b80a8d09.png"},496:function(s,a,t){"use strict";t.r(a);var n=t(35),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"类加载过程详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程详解"}},[s._v("#")]),s._v(" 类加载过程详解")]),s._v(" "),n("p"),n("div",{staticClass:"table-of-contents-default"},[n("div",{staticClass:"toc-container-header"},[s._v("文章目录")]),n("ul",[n("li",[n("a",{attrs:{href:"#类的生命周期"}},[s._v("类的生命周期")]),n("ul",[n("li",[n("a",{attrs:{href:"#类加载过程"}},[s._v("类加载过程")]),n("ul",[n("li",[n("a",{attrs:{href:"#step-1-加载-loading"}},[s._v("Step 1 | 加载/Loading")])]),n("li",[n("a",{attrs:{href:"#step-2-连接-linking"}},[s._v("Step 2 | 连接/Linking")]),n("ul",[n("li",[n("a",{attrs:{href:"#step-2-1-验证-verification"}},[s._v("Step 2.1 | 验证/Verification")])]),n("li",[n("a",{attrs:{href:"#step-2-2-准备-preparation"}},[s._v("Step 2.2 | 准备/Preparation")])]),n("li",[n("a",{attrs:{href:"#step-2-3-解析-resolution"}},[s._v("Step 2.3 | 解析/Resolution")])])])]),n("li",[n("a",{attrs:{href:"#step-3-初始化-initialization"}},[s._v("Step 3 | 初始化/Initialization")])])])]),n("li",[n("a",{attrs:{href:"#类卸载"}},[s._v("类卸载")])])])]),n("li",[n("a",{attrs:{href:"#类加载器"}},[s._v("类加载器")]),n("ul",[n("li",[n("a",{attrs:{href:"#类加载器介绍"}},[s._v("类加载器介绍")])]),n("li",[n("a",{attrs:{href:"#类加载器的加载规则"}},[s._v("类加载器的加载规则")])]),n("li",[n("a",{attrs:{href:"#类加载器的层次"}},[s._v("类加载器的层次")]),n("ul",[n("li",[n("a",{attrs:{href:"#正常-从java开发人员的角度来看"}},[s._v("正常：从Java开发人员的角度来看")])]),n("li",[n("a",{attrs:{href:"#特殊-从java虚拟机的角度来看"}},[s._v("特殊：从Java虚拟机的角度来看")])]),n("li",[n("a",{attrs:{href:"#类加载器层次的例子"}},[s._v("类加载器层次的例子")])])])]),n("li",[n("a",{attrs:{href:"#自定义类加载器"}},[s._v("自定义类加载器")])]),n("li",[n("a",{attrs:{href:"#jvm类加载机制"}},[s._v("JVM类加载机制")]),n("ul",[n("li",[n("a",{attrs:{href:"#双亲委派机制-介绍"}},[s._v("双亲委派机制-介绍")])]),n("li",[n("a",{attrs:{href:"#双亲委派机制-执行流程"}},[s._v("双亲委派机制-执行流程")]),n("ul",[n("li",[n("a",{attrs:{href:"#简洁版"}},[s._v("简洁版")])]),n("li",[n("a",{attrs:{href:"#结合代码解释版"}},[s._v("结合代码解释版")])])])]),n("li",[n("a",{attrs:{href:"#双亲委派机制-好处"}},[s._v("双亲委派机制-好处")])]),n("li",[n("a",{attrs:{href:"#双亲委派机制-打破方法"}},[s._v("双亲委派机制-打破方法")])])])])])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"类的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类的生命周期"}},[s._v("#")]),s._v(" 类的生命周期")]),s._v(" "),n("p",[s._v("类从被加载到虚拟机内存中开始到卸载出内存为止，它的整个生命周期可以简单概括为 7 个阶段：")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("加载（Loading）")]),s._v("：查找并加载类的二进制数据")]),s._v(" "),n("li",[s._v("连接/链接（Linking） — 细分为3个阶段：\n"),n("ul",[n("li",[n("strong",[s._v("验证（Verification）")]),s._v("：确保被加载的类的正确性")]),s._v(" "),n("li",[n("strong",[s._v("准备（Preparation）")]),s._v("：为类的静态变量分配内存，并将其初始化为默认值")]),s._v(" "),n("li",[n("strong",[s._v("解析（Resolution）")]),s._v("：把类中的符号引用转换为直接引用")])])]),s._v(" "),n("li",[n("strong",[s._v("初始化（Initialization）")])]),s._v(" "),n("li",[n("strong",[s._v("使用（Using）")])]),s._v(" "),n("li",[n("strong",[s._v("卸载（Unloading）")])])]),s._v(" "),n("p",[n("img",{attrs:{src:t(436),alt:"一个类的完整生命周期"}})]),s._v(" "),n("h3",{attrs:{id:"类加载过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程"}},[s._v("#")]),s._v(" 类加载过程")]),s._v(" "),n("p",[n("strong",[s._v("class文件 需要加载到虚拟机中之后才能运行和使用，那么虚拟机是如何加载这些 class文件 呢？")])]),s._v(" "),n("p",[s._v("系统加载 Class 类型的文件主要三步："),n("strong",[s._v("加载->连接->初始化")]),s._v("。连接过程又可分为三步："),n("strong",[s._v("验证->准备->解析")]),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(437),alt:"类加载过程"}})]),s._v(" "),n("h4",{attrs:{id:"step-1-加载-loading"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-1-加载-loading"}},[s._v("#")]),s._v(" Step 1 | 加载/Loading")]),s._v(" "),n("p",[s._v("加载（Loading）是「类加载过程」的第一步，主要完成下面 3 件事情：")]),s._v(" "),n("ol",[n("li",[s._v("通过类的全限定名获取定义此类的二进制字节流。")]),s._v(" "),n("li",[s._v("将字节流所代表的 "),n("strong",[s._v("静态存储结构")]),s._v(" 转换为 "),n("strong",[s._v("方法区的运行时数据结构")]),s._v("。")]),s._v(" "),n("li",[s._v("在内存（Java堆）中生成一个代表该类的「"),n("code",[s._v("Class")]),s._v("对象」，作为方法区中这些数据的访问入口。")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("类加载器并不需要等到某个类被“首次主动使用”时再加载它，JVM规范允许类加载器在预料某个类将要被使用时就预先加载它。")]),s._v(" "),n("p",[s._v("如果在预先加载的过程中遇到了「"),n("code",[s._v(".class")]),s._v("文件」缺失或存在错误，类加载器必须在程序首次主动使用该类时才报告错误(LinkageError错误)，如果这个类一直没有被程序主动使用，那么类加载器就不会报告错误。")])]),s._v(" "),n("p",[s._v("加载阶段与连接阶段的部分动作(如一部分字节码文件格式验证动作)是交叉进行的，加载阶段尚未结束，连接阶段可能就已经开始了。")]),s._v(" "),n("h4",{attrs:{id:"step-2-连接-linking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-2-连接-linking"}},[s._v("#")]),s._v(" Step 2 | 连接/Linking")]),s._v(" "),n("h5",{attrs:{id:"step-2-1-验证-verification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-2-1-验证-verification"}},[s._v("#")]),s._v(" Step 2.1 | 验证/Verification")]),s._v(" "),n("p",[s._v("验证（Verification）是连接阶段的第一步，这一阶段的目的是确保「"),n("code",[s._v(".class")]),s._v("文件」的字节流中包含的信息符合《Java 虚拟机规范》的全部约束要求，保证这些信息被当作代码运行后不会危害虚拟机自身的安全。")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("验证阶段这一步在整个类加载过程中耗费的资源还是相对较多的，但很有必要，可以有效防止恶意代码的执行。任何时候，程序安全都是第一位。")]),s._v(" "),n("p",[s._v("不过，验证阶段也不是必须要执行的阶段。如果程序运行的全部代码(包括自己编写的、第三方包中的、从外部加载的、动态生成的等所有代码)都已经被反复使用和验证过，在生产环境的实施阶段就可以考虑使用 "),n("code",[s._v("-Xverify:none")]),s._v(" 参数来关闭大部分的类验证措施，以缩短虚拟机类加载的时间。")])]),s._v(" "),n("p",[s._v("验证阶段主要由4个检验阶段组成：")]),s._v(" "),n("ul",[n("li",[s._v("文件格式验证（「"),n("code",[s._v(".class")]),s._v("文件」格式检查）")]),s._v(" "),n("li",[s._v("元数据验证（字节码语义检查）")]),s._v(" "),n("li",[s._v("字节码验证（程序语义检查）")]),s._v(" "),n("li",[s._v("符号引用验证（类的正确性检查）")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(438),alt:"验证阶段示意图"}})]),s._v(" "),n("p",[s._v("值得注意的是：")]),s._v(" "),n("ul",[n("li",[s._v("「文件格式验证」这一阶段是"),n("strong",[s._v("基于该类的二进制字节流进行的")]),s._v("，主要目的是保证输入的字节流能正确地解析并存储于方法区之内，格式上符合描述一个 Java 类型信息的要求。")]),s._v(" "),n("li",[s._v("除了这一阶段之外，其余三个验证阶段都是"),n("strong",[s._v("基于方法区的存储结构上进行的")]),s._v("，不会再直接读取、操作字节流了。")])]),s._v(" "),n("p",[s._v("「符号引用验证」发生在类加载过程中的「解析阶段」，具体点说是 JVM 将「符号引用」转化为「直接引用」\n」的时候（「解析阶段」会介绍「符号引用」和「直接引用」）。")]),s._v(" "),n("p",[s._v("「符号引用验证」的主要目的是"),n("strong",[s._v("确保「解析阶段」能正常执行")]),s._v("，如果无法通过「符号引用验证」，JVM 会抛出异常，比如：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("java.lang.IllegalAccessError")]),s._v("：当类试图访问或修改它没有权限访问的字段，或调用它没有权限访问的方法时，抛出该异常。")]),s._v(" "),n("li",[n("code",[s._v("java.lang.NoSuchFieldError")]),s._v("：当类试图访问或修改一个指定的对象字段，而该对象不再包含该字段时，抛出该异常。")]),s._v(" "),n("li",[n("code",[s._v("java.lang.NoSuchMethodError")]),s._v("：当类试图访问一个指定的方法，而该方法不存在时，抛出该异常。")]),s._v(" "),n("li",[s._v("……")])]),s._v(" "),n("h5",{attrs:{id:"step-2-2-准备-preparation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-2-2-准备-preparation"}},[s._v("#")]),s._v(" Step 2.2 | 准备/Preparation")]),s._v(" "),n("p",[n("strong",[s._v("准备阶段是正式为类变量分配内存并设置类变量初始值的阶段，这些内存都将在方法区中分配")]),s._v("。对于该阶段有以下几点需要注意：")]),s._v(" "),n("ol",[n("li",[s._v("这时候进行内存分配的仅包括类变量（Class Variables ，即"),n("strong",[s._v("静态变量")]),s._v("，被 "),n("code",[s._v("static")]),s._v(" 关键字修饰的变量，只与类相关，因此被称为类变量），而"),n("strong",[s._v("不包括实例变量")]),s._v("。实例变量会在对象实例化时随着对象一块分配在 Java 堆中。")]),s._v(" "),n("li",[s._v('这里所设置的初始值"通常情况"下是数据类型默认的零值（如 '),n("code",[s._v("0")]),s._v("、"),n("code",[s._v("0L")]),s._v("、"),n("code",[s._v("null")]),s._v("、"),n("code",[s._v("false")]),s._v(" 等）\n"),n("ul",[n("li",[s._v("比如我们定义了 "),n("code",[s._v("public static int value=111")]),s._v(" ，那么 "),n("code",[s._v("value")]),s._v(" 变量在准备阶段的初始值就是 "),n("code",[s._v("0")]),s._v(" 而不是 "),n("code",[s._v("111")]),s._v("（初始化阶段才会赋值）。")]),s._v(" "),n("li",[s._v("特殊情况：比如给 "),n("code",[s._v("value")]),s._v(" 变量加上了 "),n("code",[s._v("final")]),s._v(" 关键字 "),n("code",[s._v("public static final int value=111")]),s._v(" ，那么准备阶段 "),n("code",[s._v("value")]),s._v(" 的值就被赋值为 "),n("code",[s._v("111")]),s._v("。")])])]),s._v(" "),n("li",[s._v("从概念上讲，类变量所使用的内存都应当在方法区中进行分配。不过有一点需要注意的是：\n"),n("ul",[n("li",[s._v("JDK 7 之前，HotSpot 使用永久代来实现方法区的时候，实现是完全符合这种逻辑概念的。")]),s._v(" "),n("li",[s._v("而在 JDK 7 及之后，HotSpot 已经把原本放在永久代的字符串常量池、静态变量等移动到堆中，这个时候类变量则会随着 Class 对象一起存放在 Java 堆中。")])])])]),s._v(" "),n("h5",{attrs:{id:"step-2-3-解析-resolution"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-2-3-解析-resolution"}},[s._v("#")]),s._v(" Step 2.3 | 解析/Resolution")]),s._v(" "),n("p",[s._v("解析阶段是虚拟机将常量池内的「符号引用」替换为「直接引用」的过程。 解析动作主要针对类或接口、字段、类方法、接口方法、方法类型、方法句柄和调用限定符 7 类「符号引用」进行。")]),s._v(" "),n("p",[s._v("《深入理解 Java 虚拟机》7.34 节第三版对「符号引用」和「直接引用」的解释如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:t(439),alt:"符号引用和直接引用"}})]),s._v(" "),n("p",[s._v("举个例子：在程序执行方法时，系统需要明确知道这个方法所在的位置。"),n("strong",[s._v("Java 虚拟机为每个类都准备了一张方法表来存放类中所有的方法")]),s._v("。当需要调用一个类的方法的时候，只要知道这个方法在方法表中的偏移量就可以直接调用该方法了。通过解析操作「符号引用」就可以直接转变为目标方法在类中方法表的位置，从而使得方法可以被调用。")]),s._v(" "),n("p",[s._v("综上，解析阶段是虚拟机将常量池内的「符号引用」替换为「直接引用」的过程，也就是"),n("strong",[s._v("得到类或者字段、方法在内存中的指针或者偏移量")]),s._v("。")]),s._v(" "),n("h4",{attrs:{id:"step-3-初始化-initialization"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-初始化-initialization"}},[s._v("#")]),s._v(" Step 3 | 初始化/Initialization")]),s._v(" "),n("p",[n("strong",[s._v("初始化阶段是执行初始化方法 "),n("code",[s._v("<clinit>()")]),s._v(" 的过程，是类加载的最后一步，这一步 JVM 才开始真正执行类中定义的 Java 程序代码(字节码)。")])]),s._v(" "),n("blockquote",[n("p",[s._v("说明："),n("code",[s._v("<clinit>()")]),s._v(" 方法是编译之后自动生成的。")])]),s._v(" "),n("p",[s._v("对于 "),n("code",[s._v("<clinit>()")]),s._v(" 方法的调用，虚拟机会自己确保其在多线程环境中的安全性。因为 "),n("code",[s._v("<clinit>()")]),s._v(" 方法是带锁线程安全，所以在多线程环境下进行类初始化的话可能会引起多个线程阻塞，并且这种阻塞很难被发现。")]),s._v(" "),n("p",[s._v("对于初始化阶段，"),n("strong",[s._v("虚拟机严格规范了有且只有 6 种情况下，必须对类进行初始化")]),s._v("（只有主动去使用类才会初始化类）：")]),s._v(" "),n("ol",[n("li",[s._v("当遇到 "),n("code",[s._v("new")]),s._v("、 "),n("code",[s._v("getstatic")]),s._v("、"),n("code",[s._v("putstatic")]),s._v(" 或 "),n("code",[s._v("invokestatic")]),s._v(" 这 4 条字节码指令时，比如 "),n("code",[s._v("new")]),s._v(" 一个类、读取一个静态字段(未被 "),n("code",[s._v("final")]),s._v(" 修饰)、或调用一个类的静态方法时。\n"),n("ul",[n("li",[s._v("当 JVM 执行 "),n("code",[s._v("new")]),s._v(" 指令时会初始化类。即当程序创建一个类的实例对象。")]),s._v(" "),n("li",[s._v("当 JVM 执行 "),n("code",[s._v("getstatic")]),s._v(" 指令时会初始化类。即程序访问类的静态变量(不是静态常量，常量会被加载到运行时常量池)。")]),s._v(" "),n("li",[s._v("当 JVM 执行 "),n("code",[s._v("putstatic")]),s._v(" 指令时会初始化类。即程序给类的静态变量赋值。")]),s._v(" "),n("li",[s._v("当 JVM 执行 "),n("code",[s._v("invokestatic")]),s._v(" 指令时会初始化类。即程序调用类的静态方法。")])])]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("java.lang.reflect")]),s._v(" 包的方法对类进行反射调用时如 "),n("code",[s._v('Class.forName("...")')]),s._v(", "),n("code",[s._v("newInstance()")]),s._v(" 等等。如果类没初始化，需要触发其初始化。")]),s._v(" "),n("li",[s._v("初始化一个类，如果其父类还未初始化，则先触发该父类的初始化。")]),s._v(" "),n("li",[s._v("当虚拟机启动时，用户需要定义一个要执行的主类 (包含 "),n("code",[s._v("main")]),s._v(" 方法的那个类)，虚拟机会先初始化这个类。")]),s._v(" "),n("li",[n("code",[s._v("MethodHandle")]),s._v(" 和 "),n("code",[s._v("VarHandle")]),s._v(" 可以看作是轻量级的反射调用机制，而要想使用这 2 个调用，\n就必须先使用 "),n("code",[s._v("findStaticVarHandle")]),s._v(" 来初始化要调用的类。")]),s._v(" "),n("li",[s._v("当一个接口中定义了 JDK8 新加入的默认方法（被 "),n("code",[s._v("default")]),s._v(" 关键字修饰的接口方法）时，如果有这个接口的实现类发生了初始化，那该接口要在其之前被初始化。")])]),s._v(" "),n("h3",{attrs:{id:"类卸载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类卸载"}},[s._v("#")]),s._v(" 类卸载")]),s._v(" "),n("p",[n("strong",[s._v("卸载类即该类的「Class对象」被 GC。")])]),s._v(" "),n("p",[s._v("卸载类需要满足 3 个要求:")]),s._v(" "),n("ol",[n("li",[s._v("该类的所有的实例对象都已被 GC，也就是说堆不存在该类的实例对象。")]),s._v(" "),n("li",[s._v("该类没有在其他任何地方被引用")]),s._v(" "),n("li",[s._v("该类的类加载器的实例已被 GC")])]),s._v(" "),n("p",[s._v("所以，在 JVM 生命周期内，由 JVM 自带的类加载器加载的类是不会被卸载的。但是由我们自定义的类加载器加载的类是可能被卸载的。")]),s._v(" "),n("p",[n("strong",[s._v("只要想通一点就好了")]),s._v("，JDK 自带的 "),n("code",[s._v("BootstrapClassLoader")]),s._v(", "),n("code",[s._v("ExtClassLoader")]),s._v(", "),n("code",[s._v("AppClassLoader")]),s._v(" 负责加载 JDK 提供的类，所以它们(类加载器的实例)肯定不会被回收。而我们自定义的类加载器的实例是可以被回收的，所以使用我们自定义加载器加载的类是可以被卸载掉的。")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("Java虚拟机将结束生命周期的几种情况：")]),s._v(" "),n("ul",[n("li",[s._v("执行了 "),n("code",[s._v("System.exit()")]),s._v("方法")]),s._v(" "),n("li",[s._v("程序正常执行结束")]),s._v(" "),n("li",[s._v("程序在执行过程中遇到了异常或错误而异常终止")]),s._v(" "),n("li",[s._v("由于操作系统出现错误而导致Java虚拟机进程终止")])])]),s._v(" "),n("h2",{attrs:{id:"类加载器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器"}},[s._v("#")]),s._v(" 类加载器")]),s._v(" "),n("h3",{attrs:{id:"类加载器介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器介绍"}},[s._v("#")]),s._v(" 类加载器介绍")]),s._v(" "),n("p",[s._v("「类加载器」从 JDK 1.0 就出现了，最初只是为了满足 Java Applet（已经被淘汰） 的需要。后来，慢慢成为 Java 程序中的一个重要组成部分，赋予了 Java 类可以被动态加载到 JVM 中并执行的能力。")]),s._v(" "),n("p",[s._v("根据官方 API 文档的介绍：")]),s._v(" "),n("blockquote",[n("p",[s._v('A class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class. Given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a "class file" of that name from a file system.\nEvery Class object contains a reference to the ClassLoader that defined it.\nClass objects for array classes are not created by class loaders, but are created automatically as required by the Java runtime. The class loader for an array class, as returned by Class.getClassLoader() is the same as the class loader for its element type; if the element type is a primitive type, then the array class has no class loader.')])]),s._v(" "),n("p",[s._v("翻译过来大概的意思是：")]),s._v(" "),n("blockquote",[n("p",[s._v("「类加载器」是一个负责加载类的对象。"),n("code",[s._v("ClassLoader")]),s._v(" 是一个抽象类。给定类的二进制名称，「类加载器」应尝试定位或生成构成类定义的数据。典型的策略是将名称转换为文件名，然后从文件系统中读取该名称的“类文件”。\n每个 Java 类都有一个引用指向加载它的 "),n("code",[s._v("ClassLoader")]),s._v("。不过，数组类不是通过 "),n("code",[s._v("ClassLoader")]),s._v(" 创建的，而是 JVM 在需要的时候自动创建的，数组类通过"),n("code",[s._v("getClassLoader()")]),s._v("方法获取 "),n("code",[s._v("ClassLoader")]),s._v(" 的时候和该数组的元素类型的 "),n("code",[s._v("ClassLoader")]),s._v(" 是一致的。")])]),s._v(" "),n("p",[s._v("从上面的介绍可以看出：")]),s._v(" "),n("ul",[n("li",[s._v("「类加载器」是一个负责加载类的对象，用于实现「类加载过程」中的「加载/Loading」这一步。")]),s._v(" "),n("li",[s._v("每个 Java 类都有一个引用指向加载它的 "),n("code",[s._v("ClassLoader")]),s._v("。")]),s._v(" "),n("li",[s._v("数组类不是通过 "),n("code",[s._v("ClassLoader")]),s._v(" 创建的（数组类没有对应的二进制字节流），是由 JVM 直接生成的。")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" classLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@CallerSensitive")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("简单来说，"),n("strong",[s._v("类加载器的主要作用就是加载 Java 类的字节码（「"),n("code",[s._v(".class")]),s._v("文件」）到 JVM 中（在内存中生成一个代表该类的「"),n("code",[s._v("Class")]),s._v("对象」）")]),s._v("。 字节码可以是 Java 源程序（"),n("code",[s._v(".java")]),s._v("文件）经过 javac 编译得来，也可以是通过工具动态生成或者通过网络下载得来。")]),s._v(" "),n("p",[s._v("其实除了加载类之外，类加载器还可以加载 Java 应用所需的资源如文本、图像、配置文件、视频等等文件资源。"),n("strong",[s._v("本文只讨论其核心功能：加载类")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"类加载器的加载规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器的加载规则"}},[s._v("#")]),s._v(" 类加载器的加载规则")]),s._v(" "),n("p",[s._v("JVM 启动的时候，并不会一次性加载所有的类，而是根据需要去动态加载。也就是说，大部分类在具体用到的时候才会去加载，这样对内存更加友好。")]),s._v(" "),n("p",[s._v("对于已经加载的类会被放在 "),n("code",[s._v("ClassLoader")]),s._v(" 的 "),n("code",[s._v("classes")]),s._v(" 中。在类加载的时候，系统会首先判断当前类是否被加载过。已经被加载的类会直接返回，否则才会尝试加载。也就是说，对于一个类加载器来说，相同二进制名称的类只会被加载一次。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由这个类加载器加载的类。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vector")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" classes "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vector")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由VM调用，用此类加载器记录每个已加载类。")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        classes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"类加载器的层次"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器的层次"}},[s._v("#")]),s._v(" 类加载器的层次")]),s._v(" "),n("p",[n("img",{attrs:{src:t(440),alt:"类加载器层次关系图"}})]),s._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[s._v("注意:")]),s._v(" "),n("p",[s._v("这里父类加载器并不是通过继承关系来实现的，而是采用组合实现的。")])]),s._v(" "),n("h4",{attrs:{id:"正常-从java开发人员的角度来看"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正常-从java开发人员的角度来看"}},[s._v("#")]),s._v(" 正常：从Java开发人员的角度来看")]),s._v(" "),n("p",[s._v("站在Java开发人员的角度来看，类加载器可以大致划分为三类，这也是 JVM 中内置的三个重要 "),n("code",[s._v("ClassLoader")]),s._v("：")]),s._v(" "),n("ol",[n("li",[n("strong",[n("code",[s._v("BootstrapClassLoader")]),s._v("(启动类加载器)")]),s._v("：最顶层的加载类，由 C++ 实现，通常表示为 "),n("code",[s._v("null")]),s._v("，并且没有父级，主要用来加载 JDK 内部的核心类库（ "),n("code",[s._v("%JAVA_HOME%/jre/lib")]),s._v(" 目录下的 "),n("code",[s._v("rt.jar")]),s._v("、"),n("code",[s._v("resources.jar")]),s._v("、"),n("code",[s._v("charsets.jar")]),s._v(" 等 jar 包和类）以及被 "),n("code",[s._v("-Xbootclasspath")]),s._v(" 参数指定的路径下的所有类。启动类加载器是无法被Java程序直接引用的。")]),s._v(" "),n("li",[n("strong",[n("code",[s._v("ExtensionClassLoader")]),s._v("(扩展类加载器)")]),s._v("：主要负责加载 "),n("code",[s._v("%JAVA_HOME%/jre/lib/ext")]),s._v(" 目录下的 jar 包和类以及被 "),n("code",[s._v("java.ext.dirs")]),s._v(" 系统变量所指定的路径下的所有类。开发者可以直接使用扩展类加载器。")]),s._v(" "),n("li",[n("strong",[n("code",[s._v("AppClassLoader")]),s._v("(应用程序类加载器)")]),s._v("：面向我们用户的加载器，该类加载器由sun.misc."),n("code",[s._v("Launcher$AppClassLoader")]),s._v(" 来实现，负责加载当前应用 "),n("code",[s._v("classpath")]),s._v(" 下的所有 jar 包和类。开发者可以直接使用该类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。")])]),s._v(" "),n("blockquote",[n("p",[s._v("🌈 拓展一下：")]),s._v(" "),n("ul",[n("li",[n("strong",[n("code",[s._v("rt.jar")])]),s._v("：rt 代表“RunTime”，"),n("code",[s._v("rt.jar")]),s._v(" 是 Java 基础类库，包含 Java doc 里面看到的所有的类的类文件。也就是说，我们常用内置库 "),n("code",[s._v("java.xxx.*")]),s._v(" 都在里面，比如 "),n("code",[s._v("java.util.*")]),s._v("、"),n("code",[s._v("java.io.*")]),s._v("、"),n("code",[s._v("java.nio.*")]),s._v("、"),n("code",[s._v("java.lang.*")]),s._v("、"),n("code",[s._v("java.sql.*")]),s._v("、"),n("code",[s._v("java.math.*")]),s._v("。\nJava 9 引入了模块系统，并且略微更改了上述的类加载器。扩展类加载器被改名为平台类加载器（platform class loader）。Java SE 中除了少数几个关键模块，比如说 "),n("code",[s._v("java.base")]),s._v(" 是由启动类加载器加载之外，其他的模块均由平台类加载器所加载。")])])]),s._v(" "),n("p",[s._v("🎬 除了这三种类加载器之外，用户还可以加入自定义的类加载器来进行拓展，以满足自己的特殊需求。就比如说:")]),s._v(" "),n("ul",[n("li",[s._v("我们可以对 Java 类的字节码（「"),n("code",[s._v(".class")]),s._v("文件」）进行加密，加载时再利用自定义的类加载器对其解密。")]),s._v(" "),n("li",[s._v("在执行非置信代码之前，自动验证数字签名。")]),s._v(" "),n("li",[s._v("动态地创建符合用户特定需要的定制化构建类。")]),s._v(" "),n("li",[s._v("从特定的场所取得 java class，例如数据库中和网络中。")])]),s._v(" "),n("h4",{attrs:{id:"特殊-从java虚拟机的角度来看"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特殊-从java虚拟机的角度来看"}},[s._v("#")]),s._v(" 特殊：从Java虚拟机的角度来看")]),s._v(" "),n("p",[s._v("站在Java虚拟机的角度来讲，只存在两种不同的类加载器:")]),s._v(" "),n("ol",[n("li",[s._v("启动类加载器 "),n("code",[s._v("BootstrapClassLoader")]),s._v(": 它使用 C++ 实现(这里仅限于Hotspot，也就是JDK1.5之后默认的虚拟机，有很多其他的虚拟机是用Java语言实现的)，是虚拟机自身的一部分；")]),s._v(" "),n("li",[s._v("所有其他的类加载器: 这些类加载器都由Java语言实现，独立于虚拟机之外，并且全部继承自抽象类 "),n("code",[s._v("java.lang.ClassLoader")]),s._v("，这些类加载器需要由启动类加载器加载到内存中之后才能去加载其他的类。")])]),s._v(" "),n("p",[s._v("也就是说，"),n("strong",[s._v("除了 "),n("code",[s._v("BootstrapClassLoader")]),s._v(" 是 JVM 自身的一部分（C++ 语言实现）之外，其他所有的类加载器都是在 JVM 外部实现的（Java语言实现），并且全都继承自 "),n("code",[s._v("ClassLoader")]),s._v(" 抽象类")])]),s._v(" "),n("h4",{attrs:{id:"类加载器层次的例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器层次的例子"}},[s._v("#")]),s._v(" 类加载器层次的例子")]),s._v(" "),n("p",[s._v("每个 "),n("code",[s._v("ClassLoader")]),s._v(" 可以通过 "),n("code",[s._v("getParent()")]),s._v(" 获取其父 "),n("code",[s._v("ClassLoader")]),s._v("，如果获取到 "),n("code",[s._v("ClassLoader")]),s._v(" 为"),n("code",[s._v("null")]),s._v(" 的话，那么该类是通过 "),n("code",[s._v("BootstrapClassLoader")]),s._v(" 加载的。")]),s._v(" "),n("p",[s._v("🐎 例子：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pdai"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classloader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoaderTest")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" loader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getContextClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("🗨 结果如下：")]),s._v(" "),n("ul",[n("li",[s._v("我们编写的 Java 类 "),n("code",[s._v("ClassLoaderTest")]),s._v(" 的 "),n("code",[s._v("ClassLoader")]),s._v(" 是 "),n("code",[s._v("AppClassLoader")]),s._v("；")]),s._v(" "),n("li",[n("code",[s._v("AppClassLoader")]),s._v(" 的 父"),n("code",[s._v("ClassLoader")]),s._v(" 是 "),n("code",[s._v("ExtClassLoader")]),s._v("；")]),s._v(" "),n("li",[n("code",[s._v("ExtClassLoader")]),s._v(" 的 父"),n("code",[s._v("ClassLoader")]),s._v(" 是 "),n("code",[s._v("BootstrapClassLoader")]),s._v("，因此输出结果为 "),n("code",[s._v("null")]),s._v("。")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Launcher")]),s._v("$"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AppClassLoader")]),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@64fef26a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Launcher")]),s._v("$"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExtClassLoader")]),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@1ddd40f3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"自定义类加载器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义类加载器"}},[s._v("#")]),s._v(" 自定义类加载器")]),s._v(" "),n("p",[s._v("我们前面也说说了，除了 "),n("code",[s._v("BootstrapClassLoader")]),s._v(" 其他类加载器均由 Java 实现且全部继承自 "),n("code",[s._v("java.lang.ClassLoader")]),s._v("。如果我们要自定义自己的类加载器，很明显需要继承 "),n("code",[s._v("ClassLoader")]),s._v(" 抽象类。")]),s._v(" "),n("p",[n("code",[s._v("ClassLoader")]),s._v(" 类有两个关键的方法：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("protected Class loadClass(String name, boolean resolve)")]),s._v("：加载指定二进制名称的类，实现了双亲委派机制 。"),n("code",[s._v("name")]),s._v(" 为类的二进制名称，"),n("code",[s._v("resolve")]),s._v(" 如果为 "),n("code",[s._v("true")]),s._v("，在加载时调用 "),n("code",[s._v("resolveClass(Class<?> c)")]),s._v(" 方法解析该类。")]),s._v(" "),n("li",[n("code",[s._v("protected Class findClass(String name)")]),s._v("：根据类的二进制名称来查找类，默认实现是空方法。")])]),s._v(" "),n("p",[s._v("如果我们不想打破双亲委派机制，就重写 "),n("code",[s._v("ClassLoader")]),s._v(" 类中的 "),n("code",[s._v("findClass()")]),s._v(" 方法即可，无法被父类加载器加载的类最终会通过这个方法被加载。但是，如果想打破双亲委派机制，则需要重写 "),n("code",[s._v("loadClass()")]),s._v(" 方法。")]),s._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[s._v("🌰自定义加载器示例")]),s._v(" "),n("p",[s._v("下面我们通过一个示例，来演示自定义类加载器，只重写 "),n("code",[s._v("findClass()")]),s._v(" 方法的流程:")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pdai"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classloader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" classData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClassData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classData "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("defineClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" classData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" classData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClassData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" className"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" fileName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("separatorChar\n                "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" className"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token char"}},[s._v("'.'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("separatorChar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".class"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InputStream")]),s._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fileName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteArrayOutputStream")]),s._v(" baos "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteArrayOutputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bufferSize "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" buffer "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("bufferSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                baos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" baos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toByteArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("root "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClassLoader")]),s._v(" classLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        classLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D:\\\\temp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" testClass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            testClass "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" classLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.pdai.jvm.classloader.Test2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" object "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" testClass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InstantiationException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalAccessException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br")])]),n("p",[s._v("自定义类加载器的核心在于对字节码文件的获取，如果是加密的字节码则需要在该类中对文件进行解密。由于这里只是演示，我并未对class文件进行加密，因此没有解密的过程。")]),s._v(" "),n("p",[s._v("这里有几点需要注意：")]),s._v(" "),n("ol",[n("li",[s._v("这里传递的文件名需要是类的全限定性名称，即"),n("code",[s._v("com.pdai.jvm.classloader.Test2")]),s._v("格式的，因为 "),n("code",[s._v("defineClass")]),s._v(" 方法是按这种格式进行处理的。")]),s._v(" "),n("li",[s._v("这类 Test 类本身可以被 "),n("code",[s._v("AppClassLoader")]),s._v(" 类加载，因此我们不能把 "),n("code",[s._v("com/pdai/jvm/classloader/Test2.class")]),s._v(" 放在类路径下。否则，由于双亲委托机制的存在，会直接导致该类由 "),n("code",[s._v("AppClassLoader")]),s._v(" 加载，而不会通过我们自定义类加载器来加载。")]),s._v(" "),n("li",[s._v("如果不想破坏双亲委托机制，最好不要重写 "),n("code",[s._v("loadClass()")]),s._v(" 方法。")])])]),s._v(" "),n("h3",{attrs:{id:"jvm类加载机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm类加载机制"}},[s._v("#")]),s._v(" JVM类加载机制")]),s._v(" "),n("p",[s._v("从前面的知识中我们知道，类加载器有很多种，"),n("strong",[s._v("当我们想要加载一个类的时候，具体是使用哪个类加载器来加载呢？")]),s._v(" 这就需要提到双亲委派机制了。")]),s._v(" "),n("h4",{attrs:{id:"双亲委派机制-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制-介绍"}},[s._v("#")]),s._v(" 双亲委派机制-介绍")]),s._v(" "),n("p",[s._v("根据官网介绍：")]),s._v(" "),n("blockquote",[n("p",[s._v('The ClassLoader class uses a delegation model to search for classes and resources. Each instance of ClassLoader has an associated parent class loader. When requested to find a class or resource, a ClassLoader instance will delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself. The virtual machine\'s built-in class loader, called the "bootstrap class loader", does not itself have a parent but may serve as the parent of a ClassLoader instance.')])]),s._v(" "),n("p",[s._v("翻译过来大概的意思是：")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("ClassLoader")]),s._v(" 类使用委托模型来搜索类和资源。每个 "),n("code",[s._v("ClassLoader")]),s._v(" 实例都有一个相关的父类加载器。需要查找类或资源时，"),n("code",[s._v("ClassLoader")]),s._v(' 实例会在试图亲自查找类或资源之前，将搜索类或资源的任务委托给其父类加载器。\n虚拟机中被称为 "bootstrap class loader"的内置类加载器本身没有父类加载器，但是可以作为 '),n("code",[s._v("ClassLoader")]),s._v(" 实例的父类加载器。")])]),s._v(" "),n("p",[s._v("从上面的介绍可以看出：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("ClassLoader")]),s._v(" 类使用委托模型来搜索类和资源。")]),s._v(" "),n("li",[s._v("双亲委派机制要求除了顶层的启动类加载器外，其余的类加载器都应有自己的父类加载器。")]),s._v(" "),n("li",[n("code",[s._v("ClassLoader")]),s._v(" 实例会在试图亲自查找类或资源之前，将搜索类或资源的任务委托给其父类加载器。")])]),s._v(" "),n("p",[s._v("注意⚠️：类加载器之间的父子关系一般"),n("strong",[s._v("不是以继承的关系来实现的，而是通常使用组合关系来复用父加载器")]),s._v("的代码。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 组合")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkCreateClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("blockquote",[n("p",[s._v("在面向对象编程中，有一条非常经典的设计原则：组合优于继承，多用组合少用继承。")])]),s._v(" "),n("h4",{attrs:{id:"双亲委派机制-执行流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制-执行流程"}},[s._v("#")]),s._v(" 双亲委派机制-执行流程")]),s._v(" "),n("h5",{attrs:{id:"简洁版"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简洁版"}},[s._v("#")]),s._v(" 简洁版")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("简洁版：双亲委派机制的过程")]),s._v(" "),n("ol",[n("li",[s._v("当"),n("code",[s._v("AppClassLoader")]),s._v("加载一个"),n("code",[s._v("class")]),s._v("时，它首先不会自己去尝试加载这个类，而是把类加载请求委派给父类加载器"),n("code",[s._v("ExtClassLoader")]),s._v("去完成。")]),s._v(" "),n("li",[s._v("当"),n("code",[s._v("ExtClassLoader")]),s._v("加载一个"),n("code",[s._v("class")]),s._v("时，它首先也不会自己去尝试加载这个类，而是把类加载请求委派给"),n("code",[s._v("BootStrapClassLoader")]),s._v("去完成。")]),s._v(" "),n("li",[s._v("如果"),n("code",[s._v("BootStrapClassLoader")]),s._v("加载失败(例如在"),n("code",[s._v("$JAVA_HOME/jre/lib")]),s._v("里未查找到该"),n("code",[s._v("class")]),s._v(")，会使用"),n("code",[s._v("ExtClassLoader")]),s._v("来尝试加载；")]),s._v(" "),n("li",[s._v("若"),n("code",[s._v("ExtClassLoader")]),s._v("也加载失败，则会使用"),n("code",[s._v("AppClassLoader")]),s._v("来加载")]),s._v(" "),n("li",[s._v("如果"),n("code",[s._v("AppClassLoader")]),s._v("也加载失败，则会报出异常"),n("code",[s._v("ClassNotFoundException")]),s._v("。")])])]),s._v(" "),n("h5",{attrs:{id:"结合代码解释版"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结合代码解释版"}},[s._v("#")]),s._v(" 结合代码解释版")]),s._v(" "),n("p",[s._v("双亲委派机制的实现代码非常简单，逻辑非常清晰，都集中在 "),n("code",[s._v("java.lang.ClassLoader")]),s._v(" 的 "),n("code",[s._v("loadClass()")]),s._v(" 中，相关代码如下所示：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoadingLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首先，检查该类是否已经加载过")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findLoadedClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果 c 为 null，则说明该类没有被加载过")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" t0 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nanoTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当父类的加载器不为空，则通过父类的loadClass来加载该类")]),s._v("\n                    c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当父类的加载器为空，则调用启动类加载器来加载该类")]),s._v("\n                    c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findBootstrapClassOrNull")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//非空父类的类加载器无法找到相应的类，则抛出异常")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当父类加载器无法加载时，则调用findClass方法来加载该类")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用户可通过覆写该方法，来自定义类加载器")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" t1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nanoTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于统计类加载器相关的信息")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("PerfCounter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParentDelegationTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" t0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("PerfCounter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFindClassTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addElapsedTimeFrom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("PerfCounter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFindClasses")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对类进行link操作")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolveClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("结合上面的源码，简单总结一下双亲委派机制的执行流程：")]),s._v(" "),n("ul",[n("li",[s._v("在类加载的时候，系统会首先判断当前类是否被加载过 "),n("code",[s._v("findLoadedClass(name)")]),s._v("。已经被加载的类会直接返回，否则才会尝试加载（每个父类加载器都会走一遍这个流程）。")]),s._v(" "),n("li",[s._v("类加载器在进行类加载的时候，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成（调用父加载器 "),n("code",[s._v("parent.loadClass()")]),s._v("方法来加载类）。这样的话，所有的请求最终都会传送到顶层的启动类加载器 "),n("code",[s._v("BootstrapClassLoader")]),s._v(" 中。")]),s._v(" "),n("li",[s._v("只有当父加载器反馈自己无法完成这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去加载（调用自己的 "),n("code",[s._v("findClass()")]),s._v(" 方法来加载类）。")]),s._v(" "),n("li",[s._v("如果子类加载器也无法加载这个类，那么它会抛出一个 "),n("code",[s._v("ClassNotFoundException")]),s._v(" 异常。")])]),s._v(" "),n("h4",{attrs:{id:"双亲委派机制-好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制-好处"}},[s._v("#")]),s._v(" 双亲委派机制-好处")]),s._v(" "),n("ul",[n("li",[s._v("对于系统类，防止内存中出现多份同样的字节码")]),s._v(" "),n("li",[s._v("保证Java程序安全稳定运行")])]),s._v(" "),n("p",[s._v("双亲委派机制保证了 Java 程序的稳定运行，可以避免类的重复加载（JVM 区分不同类的方式不仅仅根据类名，相同的类文件被不同的类加载器加载产生的是两个不同的类），也保证了 Java 的核心 API 不被篡改。")]),s._v(" "),n("p",[s._v("如果没有使用双亲委派机制，而是每个类加载器加载自己的话就会出现一些问题，比如我们编写一个称为 "),n("code",[s._v("java.lang.Object")]),s._v(" 类的话，那么程序运行的时候，系统就会出现两个不同的 "),n("code",[s._v("Object")]),s._v(" 类。双亲委派机制可以保证加载的是 JRE 里的那个 "),n("code",[s._v("Object")]),s._v(" 类，而不是你写的 "),n("code",[s._v("Object")]),s._v(" 类。这是因为 "),n("code",[s._v("AppClassLoader")]),s._v(" 在加载你的 "),n("code",[s._v("Object")]),s._v(" 类时，会委托给 "),n("code",[s._v("ExtClassLoader")]),s._v(" 去加载，而 "),n("code",[s._v("ExtClassLoader")]),s._v(" 又会委托给 "),n("code",[s._v("BootstrapClassLoader")]),s._v("，"),n("code",[s._v("BootstrapClassLoader")]),s._v(" 发现自己已经加载过了 "),n("code",[s._v("Object")]),s._v(" 类，会直接返回，不会去加载你写的 "),n("code",[s._v("Object")]),s._v(" 类。")]),s._v(" "),n("h4",{attrs:{id:"双亲委派机制-打破方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制-打破方法"}},[s._v("#")]),s._v(" 双亲委派机制-打破方法")]),s._v(" "),n("p",[s._v("双亲委派机制并不是一种强制性的约束，只是 JDK 官方推荐的一种方式。如果我们因为某些特殊需求想要打破双亲委派机制，也是可以的。")]),s._v(" "),n("p",[s._v("自定义加载器的话，需要继承 "),n("code",[s._v("ClassLoader")]),s._v(" 。"),n("strong",[s._v("如果我们不想打破双亲委派机制，就重写 "),n("code",[s._v("ClassLoader")]),s._v(" 类中的 "),n("code",[s._v("findClass()")]),s._v(" 方法即可")]),s._v("，无法被父类加载器加载的类最终会通过这个方法被加载。但是，"),n("strong",[s._v("如果想打破双亲委派机制则需要重写 "),n("code",[s._v("loadClass()")]),s._v(" 方法")]),s._v("。")]),s._v(" "),n("p",[s._v("为什么是重写 "),n("code",[s._v("loadClass()")]),s._v(" 方法打破双亲委派机制呢？双亲委派机制的执行流程已经解释了：")]),s._v(" "),n("blockquote",[n("p",[s._v("类加载器在进行类加载的时候，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成（调用父加载器 "),n("code",[s._v("loadClass()")]),s._v(" 方法来加载类）。")])]),s._v(" "),n("p",[s._v("重写 "),n("code",[s._v("loadClass()")]),s._v("方法之后，我们就可以改变传统双亲委派机制的执行流程。例如，子类加载器可以在委派给父类加载器之前，先自己尝试加载这个类，或者在父类加载器返回之后，再尝试从其他地方加载这个类。具体的规则由我们自己实现，根据项目需求定制化。")]),s._v(" "),n("p",[s._v("我们比较熟悉的 Tomcat 服务器为了能够优先加载 Web 应用目录下的类，然后再加载其他目录下的类，就自定义了类加载器 "),n("code",[s._v("WebAppClassLoader")]),s._v(" 来打破双亲委托机制。这也是 Tomcat 下 Web 应用之间的类实现隔离的具体原理。")]),s._v(" "),n("p",[s._v("Tomcat 的类加载器的层次结构如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:t(441),alt:"Tomcat 的类加载器的层次结构"}})]),s._v(" "),n("p",[s._v("Tomcat 这四个自定义的类加载器对应的目录如下：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("CommonClassLoader")]),s._v(" 对应 "),n("code",[s._v("<Tomcat>/common/*")])]),s._v(" "),n("li",[n("code",[s._v("CatalinaClassLoader")]),s._v(" 对应 "),n("code",[s._v("<Tomcat>/server/*")])]),s._v(" "),n("li",[n("code",[s._v("SharedClassLoader")]),s._v(" 对应 "),n("code",[s._v("<Tomcat>/shared/*")])]),s._v(" "),n("li",[n("code",[s._v("WebAppClassloader")]),s._v(" 对应 "),n("code",[s._v("<Tomcat>/webapps/<app>/WEB-INF/*")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);